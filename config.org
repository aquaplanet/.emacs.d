* INITIALIZE THE WORLD OF EMACS
  This is my initialization file for Emacs. This file is bootstrapped
  from init.el. Init.el does the following:
  
  - Compare config.el and config.org. If .el is older than .org the
    .org file is tangled to config.el.
  - Load config.el
  - Creates a save hook that tangles this file whenever it is saved.

  The source code for the init.el can be found on
  [http://www.holgerschurig.de/en/emacs-init-tangle/]

* Preparations
** Package sources

#+BEGIN_SRC emacs-lisp :tangle yes
;(require 'package)
(package-initialize)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
(add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/") t) ; Org-mode's repository
(add-to-list 'package-archives '("marmalade" . "https://marmalade-repo.org/packages/"))
#+END_SRC

Use M-x package-refresh-contents to reload the list of packages after
adding more to package-archives without restarting (or just
restart)...

** use-package
   This is something really cool, a macro from John Wiegley at
   [https://github.com/jwiegley/use-package]. It does all installation
   of packages and gathers the configuration of it close by etc.

   This installation was found on [http://cachestocaches.com/2015/8/getting-started-use-package/].

#+BEGIN_SRC emacs-lisp :tangle yes
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(eval-when-compile
  (require 'use-package))
(require 'diminish)
(require 'bind-key)
#+END_SRC

* Aesthetics
** Disable startup screen

#+BEGIN_SRC emacs-lisp :tangle yes
(setq inhibit-startup-screen t)
#+END_SRC

** More workarea

#+BEGIN_SRC emacs-lisp :tangle yes
(menu-bar-mode -1)
(tool-bar-mode -1)
#+END_SRC

* HTML/CSS/XML
** Tweaking to nXML-mode
   När du skriver </ så vill du givetvis ha ett avslut.

   #+BEGIN_SRC emacs-lisp :tangle yes
   (setq nxml-slash-auto-complete-flag t) 
   #+END_SRC


** Emmet
Emmet är en fantastiskt mod till många texteditorer som gör det
extremt enkelt att ändra i XML-filer. Eller som de beskriver själva:
"Ett sätt skapa HTML med CSS-selectorer. Skriver du t.ex. nedan och
trycker på C-j så får du det du ser under

html>head>title

#+BEGIN_SRC html :tangle no
<html>
  <head>
    <title>
    </title>
   </head>
</body>
#+END_SRC

Det finns mycket mer till Emmet, men just nu är det vad jag kan. Läs
mer på [[https://github.com/smihica/emmet-mode][Github-sidan för Emmet-mode]].

#+BEGIN_SRC emacs-lisp :tangle yes
(use-package emmet-mode
  :ensure t
  :config
    (add-hook 'sgml-mode-hook 'emmet-mode)
    (add-hook 'css-mode-hook  'emmet-mode)
    (add-hook 'nxml-mode-hook  'emmet-mode)
)
#+END_SRC

* Magit
  Magit is THE git client for Emacs. It is on Github: [https://github.com/magit/magit].

#+BEGIN_SRC emacs-lisp :tangle yes
(use-package magit
  :bind ("C-x g" . magit-status)
  :ensure t)
#+END_SRC

* Misc
** Dangerous commands
#+BEGIN_SRC emacs-lisp :tangle yes
(put 'erase-buffer 'disabled nil)
#+END_SRC

* TODO Stuff to add [0/3]
- [ ] Create an emacs_lisp code block by pressing a key combination
- [ ] Open config.org fast with one key combination
